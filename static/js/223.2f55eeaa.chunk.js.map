{"version":3,"file":"static/js/223.2f55eeaa.chunk.js","mappings":"sRACA,EAA0B,kCAA1B,EAAoE,gCAApE,EAA4G,gCAA5G,EAAoJ,gCAApJ,EAA6L,iC,SCI9K,SAASA,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,CAAEC,KAAM,GAAIC,MAAO,GAAIC,SAAU,KAAlE,eAAOC,EAAP,KAAaC,EAAb,KACMC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,cAAtBP,EAAR,EAAQA,KAAMQ,EAAd,EAAcA,MACdJ,GAAQ,SAAAK,GAAQ,yBAAUA,GAAV,cAAqBT,EAAOQ,GAA5B,GACjB,EAEKE,EAAY,mCAAG,WAAMJ,GAAN,wEACnBA,EAAMK,iBADa,SAEId,EAASe,EAAAA,GAAAA,UAAA,UAA6BT,KAF1C,cAGNU,OAASD,EAAAA,GAAAA,SAAAA,UAAAA,YACpBR,EAAQ,CAAEJ,KAAM,GAAIC,MAAO,GAAIC,SAAU,KAJxB,2CAAH,sDAOVF,EAA0BG,EAA1BH,KAAMC,EAAoBE,EAApBF,MAAOC,EAAaC,EAAbD,SAErB,OACE,iBAAKY,UAAWC,EAAhB,WACE,eAAID,UAAWC,EAAf,qDACA,kBAAMC,SAAUN,EAAhB,WACE,mBAAOI,UAAWC,EAAlB,kBAEE,kBACED,UAAWC,EACXF,KAAK,OACLb,KAAK,OACLiB,QAAQ,yHACRC,MAAM,8DACNC,YAAY,eACZC,UAAQ,EACRZ,MAAOR,EACPqB,SAAUhB,QAGd,mBAAOS,UAAWC,EAAlB,mBAEE,kBACED,UAAWC,EACXF,KAAK,QACLb,KAAK,QACLiB,QAAQ,mDACRC,MAAM,mBACNC,YAAY,wBACZC,UAAQ,EACRZ,MAAOP,EACPoB,SAAUhB,QAGd,mBAAOS,UAAWC,EAAlB,sBAEE,kBACED,UAAWC,EACXF,KAAK,WACLb,KAAK,WACLsB,UAAU,IACVF,UAAQ,EACRZ,MAAON,EACPmB,SAAUhB,QAGd,mBAAQQ,KAAK,SAASC,UAAWC,EAAjC,2BAMP,C","sources":["webpack://goit-react-hw-08-phonebook/./src/pages/RegistrationPage/RegistrationPage.module.css?b753","pages/RegistrationPage/RegistrationPage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"section\":\"RegistrationPage_section__yRUoV\",\"title\":\"RegistrationPage_title__pXe0V\",\"label\":\"RegistrationPage_label__+w-OG\",\"input\":\"RegistrationPage_input__gmPmx\",\"button\":\"RegistrationPage_button__RWQD2\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { authOperations } from 'redux/auth';\nimport styles from './RegistrationPage.module.css';\n\nexport default function RegistrationPage() {\n  const dispatch = useDispatch();\n  const [form, setForm] = useState({ name: '', email: '', password: '' });\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    setForm(prevForm => ({ ...prevForm, [name]: value }));\n  };\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    const response = await dispatch(authOperations.register({ ...form }));\n    if (response.type === authOperations.register.fulfilled.toString()) {\n      setForm({ name: '', email: '', password: '' });\n    }\n  };\n  const { name, email, password } = form;\n\n  return (\n    <div className={styles.section}>\n      <h2 className={styles.title}>Please enter your registration details</h2>\n      <form onSubmit={handleSubmit}>\n        <label className={styles.label}>\n          Name\n          <input\n            className={styles.input}\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces.\"\n            placeholder=\"Example John\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n        </label>\n        <label className={styles.label}>\n          Email\n          <input\n            className={styles.input}\n            type=\"email\"\n            name=\"email\"\n            pattern=\"([A-z0-9_.-]{1,})@([A-z0-9_.-]{1,}).([A-z]{2,8})\"\n            title=\"Enter your email\"\n            placeholder=\"Example user@mail.com\"\n            required\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n        <label className={styles.label}>\n          Password\n          <input\n            className={styles.input}\n            type=\"password\"\n            name=\"password\"\n            minLength=\"7\"\n            required\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n        <button type=\"submit\" className={styles.button}>\n          Register\n        </button>\n      </form>\n    </div>\n  );\n}\n"],"names":["RegistrationPage","dispatch","useDispatch","useState","name","email","password","form","setForm","handleChange","event","currentTarget","value","prevForm","handleSubmit","preventDefault","authOperations","type","className","styles","onSubmit","pattern","title","placeholder","required","onChange","minLength"],"sourceRoot":""}